<template>
  <div class="map-container" v-loading.body="loading">
    <el-form :inline="true" :model="formInline" class="demo-form-inline search-wrap">
      <el-form-item label="机构选择">
        <el-select v-model="formInline.organization" @change="selectChange">
          <el-option
          v-for='item in instList'
          :key='item.id'
          :value='item.id'
          :label="item.name">
          </el-option>
        </el-select>
      </el-form-item>
    </el-form>
    <!-- echarts -->
    <div id="service-map-wrap"></div>
  </div>
</template>

<script>

export default {
  async created () {
    try{
      this.loading = true
      this.userInfo = window._dataInfo
      // 获取机构列表
      let loadInstList = await this._loadInstList()
      // 获取服务人员
      this._loadServicerData(this._drawEcharts)
    } catch (e) {
      console.log(e)
    }
  },
  data() {
    return {
      loading: false,
      myChart: null,
      formInline: {
        organization: ""
      },
      userInfo: null,   // 用户信息
      instList: [],  // 机构列表   
      serviceData: [],   // 散点地图数据 
      geoCoordMap: null  // 散点地图坐标数据
    };
  },
  mounted () {
    
  },
  methods: {
    // 选择对应的机构
    selectChange (id) {
      const userType = window._dataInfo.type  // userType  用户身份 0 超级管理员 1 机构 2 政府
      console.log(userType)
      let params
      if (userType === 0 || userType === 1) {
        params = {
          ids: [id]
        }
        console.log(params)
      }
      if (userType === 2) {
        let ids = []
        this.instList.forEach((item) => {
          ids.push(item.id)
        })
        params = {
          ids
        }
      }
      this.$http.post('http://mp.17link.cc/worker/position',params)
      .then(res => {
        this.serviceData = res.data.data
        this.geoCoordMap = res.data.geoCoordMap
        this._drawEcharts()
      }).catch(err => {
        console.log(err)
      })
    },
    // 下拉列表数据
    async _loadInstList () {
      const userType = window._dataInfo.type  // userType  用户身份 0 超级管理员 1 机构 2 政府
      let params
      if (userType === 0) {
        console.log('超级管理员')
        params = {
          cityId: '',
          provinceId: '',
          streetId: '',
          pageNum: 1
        }
        let res = await this.$http.post('http://ums.17link.cc/orgStreet/getOrgByParam.do',params)
        .then(res => {
          this.instList = res.data.data.list
        }).catch(err => {
          console.log(err)
        })
      } else if (userType === 1) {
        console.log('机构')
        this.instList.push({
          id: this.userInfo.orgId,
          name: this.userInfo.orgName
        })
      } else if (userType === 2) {
        console.log('政府')
        params = {
          cityId: this.userInfo.cityId,
          areaId: this.userInfo.countryId,
          provinceId: this.userInfo.provinceId,
          streetId: this.userInfo.streetId,
          pageNum: 1
        }
        let res = await this.$http.post('http://ums.17link.cc/orgStreet/getOrgByParam.do',params)
        .then(res => {
          this.instList = res.data.data.list
        }).catch(err => {
          console.log(err)
        })
      }
      
    },
    // 地图散点数据  服务人员数据
    async _loadServicerData (cb) {
      const userType = window._dataInfo.type  // userType  用户身份 0 超级管理员 1 机构 2 政府
      let params
      if (userType === 0) {
        console.log('超级管理员')
        params = {
          ids: []
        }
      } else if (userType === 1) {
        console.log('机构')
        const orgId = this.userInfo.orgId
        params = {
          ids: [orgId]
        }
      } else if (userType === 2) {
        console.log('政府')
        let ids = []
        this.instList.forEach((item) => {
          ids.push(item.id)
        })
        params = { ids }
      }
      let res = await this.$http.post('http://mp.17link.cc/worker/position',params)
      .then(res => {
        this.serviceData = res.data.data
        this.geoCoordMap = res.data.geoCoordMap
      }).catch(err => {
        console.log(err)
      })
      cb && cb()
    },
    // 绘制地图
    _drawEcharts () {
      this.$nextTick(() => {
        // 初始化
        this.myChart = echarts.init(document.getElementById("service-map-wrap"))
        this.loading = false
        // 人员坐标
        let serviceData = this.serviceData
        let geoCoordMap = this.geoCoordMap
        let convertData = function(data) {
          var res = [];
          for (var i = 0; i < data.length; i++) {
            var geoCoord = geoCoordMap[data[i].name];
            if (geoCoord) {
              res.push({
                name: data[i].name,
                value: geoCoord.concat(data[i].value)
              });
            }
          }
          return res;
        }
        // 配置
        let option = {
            backgroundColor: "#404a59",
            title: {
              text: "服务人员分布",
              left: "center",
              textStyle: {
                color: "#fff"
              }
            },
            tooltip: {
              trigger: "item",
              formatter: function (obj) {
                return `${obj.name}`
              }
            },
            bmap: {
              center: [104.080384, 30.656567],
              zoom: 6,
              roam: true,
              mapStyle: {
                styleJson: [
                  {
                    featureType: "water",
                    elementType: "all",
                    stylers: {
                      color: "#044161"
                    }
                  },
                  {
                    featureType: "land",
                    elementType: "all",
                    stylers: {
                      color: "#004981"
                    }
                  },
                  {
                    featureType: "boundary",
                    elementType: "geometry",
                    stylers: {
                      color: "#064f85"
                    }
                  },
                  {
                    featureType: "railway",
                    elementType: "all",
                    stylers: {
                      visibility: "off"
                    }
                  },
                  {
                    featureType: "highway",
                    elementType: "geometry",
                    stylers: {
                      color: "#004981"
                    }
                  },
                  {
                    featureType: "highway",
                    elementType: "geometry.fill",
                    stylers: {
                      color: "#005b96",
                      lightness: 1
                    }
                  },
                  {
                    featureType: "highway",
                    elementType: "labels",
                    stylers: {
                      visibility: "off"
                    }
                  },
                  {
                    featureType: "arterial",
                    elementType: "geometry",
                    stylers: {
                      color: "#004981"
                    }
                  },
                  {
                    featureType: "arterial",
                    elementType: "geometry.fill",
                    stylers: {
                      color: "#00508b"
                    }
                  },
                  {
                    featureType: "poi",
                    elementType: "all",
                    stylers: {
                      visibility: "off"
                    }
                  },
                  {
                    featureType: "green",
                    elementType: "all",
                    stylers: {
                      color: "#056197",
                      visibility: "off"
                    }
                  },
                  {
                    featureType: "subway",
                    elementType: "all",
                    stylers: {
                      visibility: "off"
                    }
                  },
                  {
                    featureType: "manmade",
                    elementType: "all",
                    stylers: {
                      visibility: "off"
                    }
                  },
                  {
                    featureType: "local",
                    elementType: "all",
                    stylers: {
                      visibility: "off"
                    }
                  },
                  {
                    featureType: "arterial",
                    elementType: "labels",
                    stylers: {
                      visibility: "off"
                    }
                  },
                  {
                    featureType: "boundary",
                    elementType: "geometry.fill",
                    stylers: {
                      color: "#029fd4"
                    }
                  },
                  {
                    featureType: "building",
                    elementType: "all",
                    stylers: {
                      color: "#1a5787"
                    }
                  },
                  {
                    featureType: "label",
                    elementType: "all",
                    stylers: {
                      visibility: "off"
                    }
                  }
                ]
              }
            },
            series: [
              {
                name: "服务人员",
                type: "scatter",
                coordinateSystem: "bmap",
                data: convertData(serviceData),
                symbolSize: function(val) {
                  // console.log(val)
                  return 10
                },
                label: {
                  normal: {
                    formatter: "{b}",
                    position: "right",
                    show: true
                  },
                  emphasis: {
                    show: true
                  }
                },
                itemStyle: {
                  normal: {
                    color: function (obj) {
                      // 1 忙碌  2空闲
                      return obj.value[2] === '2' ? '#ddb926' : '#ec361be6'
                    }
                  }
                }
              },
            ]
        };
        this.myChart.setOption(option);
      })
    }
  }
}
</script>

<style lang="scss" scoped>
.map-container {
  padding: 20px;
}
#service-map-wrap {
  width: 100%;
  height: 750px;
  position: relative;
}
.anchorBL{
  display: none;
}
</style>
